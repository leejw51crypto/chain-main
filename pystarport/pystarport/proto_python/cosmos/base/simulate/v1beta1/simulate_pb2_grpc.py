# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cosmos.base.simulate.v1beta1 import (
    simulate_pb2 as cosmos_dot_base_dot_simulate_dot_v1beta1_dot_simulate__pb2,
)


class SimulateServiceStub(object):
    """SimulateService defines a gRPC service for simulating transactions.
    It may also support querying and broadcasting in the future.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Simulate = channel.unary_unary(
            "/cosmos.base.simulate.v1beta1.SimulateService/Simulate",
            request_serializer=cosmos_dot_base_dot_simulate_dot_v1beta1_dot_simulate__pb2.SimulateRequest.SerializeToString,
            response_deserializer=cosmos_dot_base_dot_simulate_dot_v1beta1_dot_simulate__pb2.SimulateResponse.FromString,
        )


class SimulateServiceServicer(object):
    """SimulateService defines a gRPC service for simulating transactions.
    It may also support querying and broadcasting in the future.
    """

    def Simulate(self, request, context):
        """Simulate simulates executing a transaction for estimating gas usage."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_SimulateServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Simulate": grpc.unary_unary_rpc_method_handler(
            servicer.Simulate,
            request_deserializer=cosmos_dot_base_dot_simulate_dot_v1beta1_dot_simulate__pb2.SimulateRequest.FromString,
            response_serializer=cosmos_dot_base_dot_simulate_dot_v1beta1_dot_simulate__pb2.SimulateResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "cosmos.base.simulate.v1beta1.SimulateService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class SimulateService(object):
    """SimulateService defines a gRPC service for simulating transactions.
    It may also support querying and broadcasting in the future.
    """

    @staticmethod
    def Simulate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/cosmos.base.simulate.v1beta1.SimulateService/Simulate",
            cosmos_dot_base_dot_simulate_dot_v1beta1_dot_simulate__pb2.SimulateRequest.SerializeToString,
            cosmos_dot_base_dot_simulate_dot_v1beta1_dot_simulate__pb2.SimulateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
